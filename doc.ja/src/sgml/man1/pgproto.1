'\" t
.\"     Title: pgproto
.\"    Author: The Pgpool Global Development Group
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 2018
.\"    Manual: Pgpool-II 4.0.3 文書
.\"    Source: Pgpool-II 4.0.3
.\"  Language: Japanese
.\"
.TH "PGPROTO" "1" "2018" "Pgpool-II 4.0.3" "Pgpool-II 4.0.3 文書"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "名前"
pgproto \- PostgreSQL もしくはフロントエンド/バックエンドプロトコルを理解しているサーバに対してテストする
.SH "概要"
.HP \w'\fBpgproto\fR\ 'u
\fBpgproto\fR [\fIoption\fR...]
.SH "説明"
.PP
\fBpgproto\fR
PostgreSQL もしくはフロントエンド/バックエンドプロトコルを理解しているサーバに対してテストします
.SH "オプション"
.PP
.PP
\fB\-h \fR\fB\fIhostname\fR\fR
.br
\fB\-\-hostname=\fR\fB\fIhostname\fR\fR
.RS 4
サーバが稼働しているマシンのホスト名。 "/"からホスト名が始まる場合、Unixドメインソケットのディレクトリとして使用されます (デフォルト: unixドメインソケット)。
.RE
.PP
\fB\-p \fR\fB\fIport\fR\fR
.br
\fB\-\-port=\fR\fB\fIport\fR\fR
.RS 4
ポート番号 (デフォルト:5432)
.RE
.PP
\fB\-u \fR\fB\fIusername\fR\fR
.br
\fB\-\-user=\fR\fB\fIusername\fR\fR
.RS 4
ユーザ名 (デフォルト: OSユーザ名)
.RE
.PP
\fB\-d \fR\fB\fIdatabasename\fR\fR
.br
\fB\-\-database=\fR\fB\fIdatabasename\fR\fR
.RS 4
データベース名 (デフォルト: ユーザ名)
.RE
.PP
\fB\-f \fR\fB\fIfilename\fR\fR
.br
\fB\-\-proto\-data\-file=\fR\fB\fIfilename\fR\fR
.RS 4
サーバに送信するメッセージデータを記述したテキストファイル (デフォルト: pgproto\&.data)。
.RE
.PP
\fB\-r \fR\fB\fInaptime\fR\fR
.br
\fB\-\-read\-nap=\fR\fB\fInaptime\fR\fR
.RS 4
待ち時間、単位はマイクロ秒 (デフォルト:0)。 0以上が指定された場合、ソケットから各データを読み込む際にスリープを入れます。 これは、遅いクライアントをシミュレートします。
.RE
.PP
\fB\-D\fR
.br
\fB\-\-debug\fR
.RS 4
デバッグメッセージを表示します。
.RE
.PP
\fB\-v\fR
.br
\fB\-\-version\fR
.RS 4
バージョンを表示して終了します。
.RE
.PP
\fB\-?\fR
.br
\fB\-\-help\fR
.RS 4
コマンドのヘルプを表示します。
.RE
.SH "例"
.PP
ファイル内の最初の文字 (Q)がフロントエンド/バックエンドプロトコルのメッセージの種類を表します。
.PP
\*(AqY\*(Aqと\*(Aqy\*(Aqは例外です。 \*(AqY\*(Aqは、Ready for queryが受信されるまで、バックエンドからメッセージを読み取ります。 \*(Aqy\*(Aqは、バックエンドからメッセージを受信している間はメッセージを読み取り、1秒間メッセージを受信しなかった場合停止します。 \*(AqY\*(Aqは、拡張クエリのSync (\*(AqS\*(Aq)、簡易問い合わせ (\*(AqQ\*(Aq)の応答を待つために使用できます。 \*(Aqy\*(Aqは、Flush (\*(AqH\*(Aq)後にメッセージを受診するために使用できます。
.PP
"SELECT * FROM "aaa""のように文字列にダブルクォートを含める場合、"SELECT * FROM \e"aaa\e""のようにバックスラッシュを使用します。 以下のように、\eを使用して複数行にまたがるコマンド行を作成することもできます。
.sp
.if n \{\
.RS 4
.\}
.nf
\*(AqQ\*(Aq "SELECT * FROM aaa \e
WHERE a = 1"
.fi
.if n \{\
.RE
.\}
.PP
ここでは入力ファイルの例を示します。
.sp
.if n \{\
.RS 4
.\}
.nf
#
# Test data example
#
\*(AqQ\*(Aq	"SELECT * FROM aaa"
\*(AqY\*(Aq
\*(AqP\*(Aq	"S1"	"BEGIN"	0
\*(AqB\*(Aq	""	"S1"	0	0	0
\*(AqE\*(Aq	""	0
\*(AqC\*(Aq	\*(AqS\*(Aq	"S1"
\*(AqP\*(Aq	"foo"	"SELECT 1"	0
\*(AqB\*(Aq	"myportal"	"foo"	0	0	0
\*(AqE\*(Aq	"myportal"	0
\*(AqP\*(Aq	"S2"	"COMMIT"	0
\*(AqB\*(Aq	""	"S2"	0	0	0
\*(AqE\*(Aq	""	0
\*(AqC\*(Aq	\*(AqS\*(Aq	"S2"
\*(AqS\*(Aq
\*(AqY\*(Aq
\*(AqX\*(Aq
.fi
.if n \{\
.RE
.\}
.PP
ここでは出力例を示します。
.sp
.if n \{\
.RS 4
.\}
.nf
$ pgproto \-p 11000 \-d test \-f sample\&.data
FE=> Query (query="SELECT * FROM aaa")
<= BE RowDescription
<= BE CommandComplete(SELECT 0)
<= BE ReadyForQuery(I)
FE=> Parse(stmt="S1", query="BEGIN")
FE=> Bind(stmt="S1", portal="")
FE=> Execute(portal="")
FE=> Close(stmt="S1")
FE=> Parse(stmt="foo", query="SELECT 1")
FE=> Bind(stmt="foo", portal="myportal")
FE=> Execute(portal="myportal")
FE=> Parse(stmt="S2", query="COMMIT")
FE=> Bind(stmt="S2", portal="")
FE=> Execute(portal="")
FE=> Close(stmt="S2")
FE=> Sync
<= BE ParseComplete
<= BE BindComplete
<= BE CommandComplete(BEGIN)
<= BE CloseComplete
<= BE ParseComplete
<= BE BindComplete
<= BE DataRow
<= BE CommandComplete(SELECT 1)
<= BE ParseComplete
<= BE BindComplete
<= BE CommandComplete(COMMIT)
<= BE CloseComplete
<= BE ReadyForQuery(I)
FE=> Terminate
.fi
.if n \{\
.RE
.\}
.PP
その他のデータファイルの例です。
.PP
Copy
.sp
.if n \{\
.RS 4
.\}
.nf
#
# Test data example
#

# CopyIn
#
\*(AqQ\*(Aq	"COPY t1 FROM STDIN"
# CopyData
\*(Aqd\*(Aq	"abc"
# CopyDone
\*(Aqc\*(Aq
\*(AqY\*(Aq

# CopyOut
#
\*(AqQ\*(Aq	"COPY t1 TO STDOUT"
\*(AqY\*(Aq

#
# Copy fail case
#
\*(AqQ\*(Aq	"COPY t1 FROM STDIN"
# CopyData
\*(Aqd\*(Aq	"abc"
# CopyFail
\*(Aqf\*(Aq	"pgproto copy fail test"
\*(AqY\*(Aq
\*(AqX\*(Aq
.fi
.if n \{\
.RE
.\}
.PP
Function Call
.sp
.if n \{\
.RS 4
.\}
.nf
#
# Test data example
#

# Function call (lo_creat)
# from PostgreSQL\*(Aqs src/include/catalog/pg_proc\&.data
# { oid => \*(Aq957\*(Aq, descr => \*(Aqlarge object create\*(Aq,
#  proname => \*(Aqlo_creat\*(Aq, provolatile => \*(Aqv\*(Aq, proparallel => \*(Aqu\*(Aq,
#  prorettype => \*(Aqoid\*(Aq, proargtypes => \*(Aqint4\*(Aq, prosrc => \*(Aqbe_lo_creat\*(Aq },

\*(AqF\*(Aq	957	1	0	1	1	"0"	0
\*(AqY\*(Aq
\*(AqX\*(Aq
.fi
.if n \{\
.RE
.\}
.sp

